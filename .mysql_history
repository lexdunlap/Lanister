use wrb2573;
source "creat"
source "create_univ_database.sql"
source "create_univ_database"
use wrb2573
source "create_univ_database.sql";
use wrb2573;
source create_univ_database.sql;
show tables
;
describe instructor;
source smallRelationsInsertFile.sql
select * from Instructor;
select * from instructor;
show tables;
describe student;
select * from instructor;
selects name, salary from instructor;
select name, salary from instructor;
select name, salary/12 as monthly_salary from instructor;
select * from instructor;
select * from teaches;
select * from instructor, teaches;
select * from instructor, teaches
where instructor.ID = teaches.ID;
select * from instructor, teaches where instructor.ID = teaches.ID;
select name, course_id  from instructor, teaches where instructor.ID = teaches.ID;
select * from course;
select * from instructor, teaches, course where instructor.ID = teaches.ID and teaches.course_id = course.course_id;
select name and title from instructor, teaches, course where instructor.ID = teaches.ID and teaches.course_id = course.course_id;
select name, title from instructor, teaches, course where instructor.ID = teaches.ID and teaches.course_id = course.course_id;
select * from advisoe;
select * from advisor;
select * from student;
select instructor.name, student.name from instructor, advisor, student where instructor.ID = i_ID and student.ID = s_ID;
select instructor.name as inst, student.name as stud from instructor, advisor, student where instructor.ID = i_ID and student.ID = s_ID;
use wrb3573;
use wrb2573;
source 455_create_tables.sql;
source insert_mail.sql;
use wrb2573
describe employees;
select * from employees;
describe parts;
select * from parts;
describe customers;
select * from customers;
describe orders;
select * from orders;
describe odetails;
select * from odetails;
describe zipcodes;
select * from zipcodes;
elect parts.pno, parts.pname from parts, odetails where price < 20.00 and parts.pno = odetails.pno;
select parts.pno, parts.pname from parts, odetails where price < 20.00 and parts.pno = odetails.pno;
select * from customers where (select INSTR(cname,'ee') = 2);
select cname, ename from orders, customers, employees where orders.cno = customers.cno and orders.eno = employees.eno group by cname;
select odetails.ono, odetails.pno, parts.pname, odetails.qty, parts.price, parts.price*odetails.qty from odetails, parts where odetails.pno = parts.pno;
create temporary table temp (cno int, zip int);
insert into temp select customers.cno, customers.zip from customers;
select temp.cno, customers.cno from temp, customers where temp.zip = customers.zip and temp.cno != customers.cno and customers.cno > temp.cno;
drop table temp;
create temporary table temp (pno int, ono int, cno int);
insert into temp select odetails.pno, odetails.ono, orders.cno from odetails natural join orders;
create temporary table temp2 (pno int, ono int, cno int);
insert into temp2 select odetails.pno, odetails.ono, orders.cno from odetails natural join orders;
select temp.pno from temp, temp2 where temp.pno = temp2.pno and temp.cno != temp2.cno and temp.cno < temp2.cno;
drop table temp;
drop table temp2;
set @dirtyPNO = (select pno from parts where pname = "Dirty Harry");
set @drPNO = (select pno from parts where pname = "Dr. Zhivago");
create temporary table dirtyONO (ono int);
create temporary table drONO (ono int);
insert into dirtyONO select ono from odetails where pno = @dirtyPNO;
insert into drONO select ono from odetails where pno = @drPNO;
create temporary table dirty (cno int, cname varchar(255));
create temporary table dr (cno int, cname varchar(255));
create temporary table dirtyCNO (cno int);
create temporary table drCNO (cno int);
insert into dirtyCNO(cno) select cno from orders, dirtyONO where orders.ono = dirtyONO.ono;
insert into drCNO(cno) select cno from orders, drONO where orders.ono = drONO.ono;
insert into dirty select customers.cno, cname from customers, dirtyCNO where dirtyCNO.cno = customers.cno;
insert into dr select customers.cno, cname from customers, drCNO where drCNO.cno = customers.cno;
select * from dr natural join dirty having count(dirty.cno) = 0;
select * from dirty natural join dr having count(dr.cno) = 0;
select cname from customers, orders where eno = 1000 and customers.cno = orders.cno group by cname;
select sum(qty) from odetails where pno = 10601;
select sum(qty*price) from odetails natural join parts;
select count(distinct city) from zipcodes;
select pname from parts where (select avg(price) from parts) < price;
select parts.pno, parts.pname, sum(odetails.qty * parts.price) as totsum from parts natural join odetails group by parts.pno;
create table temp (pno int, pname varchar(255), totsum real);
insert into temp select parts.pno, parts.pname, sum(odetails.qty * parts.price) as totsum from parts natural join odetails group by parts.pno;
select * from temp where totsum > 1000;
select ono, datediff(shipped, received) days_until_shipped from orders where datediff(shipped, received) < 3;
notee
use wrb2573;
create temporary table customersTemp (cno int, cname varchar(255), street varchar(255), zip int, phone varchar(255));
insert into customersTemp select * from customers;
select * from customerTempl
select * from customerTempl;
select * from customerTempl select * from customerTempl;
select * from customerTemp;
select * from customersTemp;
create temporary table temp (cno int, count int);
select cno, count(*) from orders where year(received) > year(curdate())-2 group by cno;
select cno, count(*) from orders where year(received) > year(curdate())-10 group by cno;
select cno, count(*) from orders where year(received) > year(curdate())-15 group by cno;
select cno, count(*) from orders where year(received) > year(curdate())-150 group by cno;
select * from orders;
select cno, count(*) from orders where year(received) > year(curdate())-13 group by cno;
select cno, count(*) from orders where year(received) > year(curdate())-14 group by cno;
select cno, count(*) from orders where year(received) > year(curdate())-15 group by cno;
insert into temp select cno, count(*) from orders where year(received) > year(curdate())-15 group by cno;
select cno from customers where cno not in (select cno from temp);
select cno from customers where cno not in (select cno from temp) and (select cno from temp where count < 2);
select cno from customers where cno not in (select cno from temp);
select cno from temp where count < 2;
delete from customersTemp where cno not in (select cno from temp);
 delete from customersTemp where cno not in (select cno from temp);
delete from customersTemp where cno in (select cno from temp where count < 2);
select * from customersTemp;
